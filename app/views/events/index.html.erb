  <script src="https://js.pusher.com/3.0/pusher.min.js"></script>

  <script>
    var pusher = new Pusher('c7a6150d22d40eea7bca', {
      encrypted: true
    });
    var channel = pusher.subscribe('test_channel');
    channel.bind('my_event', function(data) {
      $.ajax({url: '/events/index_ajax',
              method: 'get',
              data: {}
        }).done(function(newList) {
          $('.news-feed').empty().append(newList);
          $('.news-feed-sorting-button').text('Soonest');
          $.ajax({url: '/events/newest_event',
              method: 'get',
              data: {}
          }).done(function(response) {
            if (response["status"] == 1) {
              events = [ response["event"] ];
              console.log(events);
              setMarkers(pmap);
            }
          });
          // alert(data.message);
        });
    });
  </script>
<div id = "today-events-container" style = "display:none;">
  <div class = "today-header"><center>Today's Events</center></div>
  <%current_user.upcoming_events.each do |event|  %>
    <% if event.date.today?%>
    <a href = "/events/<%=event.id%>">
      <div class = "today-event-item">
        <div class = "today-event-name"><%=event.name%></div>
        <div class = "today-event-address"><%=event.address%></div>
        <div class = "today-event-time">in <%=distance_of_time_in_words(Time.now, event.date) %></div>
      </div>
    </a>
    <% end %>
  <% end %>
</div>

<div class="events-header-container">
  <div class="feed-header">Event Feed</div>
  <div class="new-event">
    <%= link_to "Create a New Event", new_event_path %>
  </div>
</div>

<div class="news-feed-container">
  <div id="all-events-map"></div>

  <div class="news-feed-sorting">
    <div class="sort-by"><span class="news-feed-sorting-switch-text">Sorted by: </span><span class="current-sort">Closest</span></div>
    <div class="sort-click"><span class="news-feed-sorting-switch-text">Click to sort by:  </span><button class="news-feed-sorting-button">Soonest</button></div>
  </div>

  <%= render partial: 'events/events', :layout => false %>

</div>

<script>
  events = <%= raw @user_appealing_events_by_proximity.to_json.as_json %>
  currentLocation = <%= raw @current_location.as_json %>;

  // Add capitalization function for displaying event names in the map
  String.prototype.capitalizeFirstLetter = function() {
    return this.charAt(0).toUpperCase() + this.slice(1);
  }

  // Create second map variable for ajaxing a pin
  var pmap;
  // Store the center location of the map; initially, the user's location
  var mapCenter = {lat: currentLocation[0], lng: currentLocation[1]}

  // JS for producing google map with marker
  function initMap() {
    var map = new google.maps.Map(document.getElementById('all-events-map'), {
      zoom: 14,
      center: mapCenter
    });
    pmap = map;
    setMarkers(map);

    // Store current center of map prior to resize (Event fires when map is idle after panning or zooming)
    google.maps.event.addListener(map,'idle',function(event) {
      mapCenter = map.getCenter();
    });
    // Recenter the map on window resize
    google.maps.event.addDomListener(window, 'resize', function() {
      map.setCenter(mapCenter);
    });
  };
  function setMarkers(map) {
    var shape = {
      coords: [1, 1, 1, 20, 18, 20, 18, 1],
      type: 'poly'
    };
    var infoWindow = new google.maps.InfoWindow({
      content: contentString,
      maxWidth: 200
    });
    for (var i = 0; i < events.length; i++) {
      var event = events[i]
      var contentString = "<a class=google-map-link href=/events/" + event.id + ">" + event.name.capitalizeFirstLetter() + "</a>";
      var pinColor;
      var eventDate = new Date(event.date);
      var todaysDate = new Date();
      if(eventDate.setHours(0,0,0,0) == todaysDate.setHours(0,0,0,0)) {
        pinColor = "FF0000";
      } else {
        pinColor = "73B5AC";
      };
      // Pushed new pins are yellow...
      if (events.length == 1) {
        pinColor = "FFFF00";
      }
      var image = {
        url: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|' + pinColor,
        size: new google.maps.Size(21, 34),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(10, 34)
      };
      // only try to set marker if event has a longitude
      if(event.longitude != null) {
        var marker = new google.maps.Marker({
          position: { lat: event.latitude, lng: event.longitude },
          map: map,
          icon: image,
          animation: google.maps.Animation.DROP,
          shape: shape,
          title: event.name,
          zIndex: event.id,
          info: contentString
        });
      }
      google.maps.event.addListener(marker, 'click', function() {
        infoWindow.setContent(this.info);
        infoWindow.open(map, this);
      });
    };
  }
  // Probably should update to do an ajax request but hey it's functional!
  $(document).ready(function(){
    if ($(".today-event-item").length > 0){
      $("#today-events-container").slideToggle("slow");
    };
    $('.news-feed-sorting-button').on('click', function(event){
      $('.card').toggleClass('flipped');
      if($(this).text() === 'Soonest') {
        $(this).text('Closest');
        $('.current-sort').text('Soonest');
      } else {
        $(this).text('Soonest');
        $('.current-sort').text('Closest');
      }
    });
  });
</script>

<script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDAvBDiolWNKT2Nn0wteaKxxKPQbk8ocjI&callback=initMap">
</script>
